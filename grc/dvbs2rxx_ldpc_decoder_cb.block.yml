# auto-generated by grc.converter

id: dvbs2rxx_ldpc_decoder_cb
label: LDPC Decoder
category: '[Core]/Digital Television/DVB'

parameters:
-   id: standard
    label: Standard
    dtype: enum
    options: [STANDARD_DVBS2, STANDARD_DVBT2]
    option_labels: [DVB-S2, DVB-T2]
    option_attributes:
        hide_dvbs2: [none, all]
        hide_dvbt2: [all, none]
        val: [dvbs2rxx.STANDARD_DVBS2, dvbs2rxx.STANDARD_DVBT2]
-   id: framesize1
    label: FECFRAME size
    dtype: enum
    options: [FECFRAME_NORMAL, FECFRAME_SHORT]
    option_labels: [Normal, Short]
    option_attributes:
        hide_normal: [none, all]
        hide_short: [all, none]
        val: [dvbs2rxx.FECFRAME_NORMAL, dvbs2rxx.FECFRAME_SHORT]
    hide: ${ standard.hide_dvbt2 }
-   id: framesize2
    label: FECFRAME size
    dtype: enum
    options: [FECFRAME_NORMAL, FECFRAME_MEDIUM, FECFRAME_SHORT]
    option_labels: [Normal, Medium, Short]
    option_attributes:
        hide_medium: [all, none, all]
        hide_normal: [none, all, all]
        hide_short: [all, all, none]
        val: [dvbs2rxx.FECFRAME_NORMAL, dvbs2rxx.FECFRAME_MEDIUM, dvbs2rxx.FECFRAME_SHORT]
    hide: ${ standard.hide_dvbs2 }
-   id: rate1
    label: Code rate
    dtype: enum
    options: [C1_2, C3_5, C2_3, C3_4, C4_5, C5_6]
    option_labels: [1/2, 3/5, 2/3, 3/4, 4/5, 5/6]
    option_attributes:
        val: [dvbs2rxx.C1_2, dvbs2rxx.C3_5, dvbs2rxx.C2_3, dvbs2rxx.C3_4, dvbs2rxx.C4_5,
            dvbs2rxx.C5_6]
    hide: ${ (framesize1.hide_normal if str(standard) == 'STANDARD_DVBT2' else 'all')
        }
-   id: rate2
    label: Code rate
    dtype: enum
    options: [C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6]
    option_labels: [1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6]
    option_attributes:
        val: [dvbs2rxx.C1_3, dvbs2rxx.C2_5, dvbs2rxx.C1_2, dvbs2rxx.C3_5, dvbs2rxx.C2_3,
            dvbs2rxx.C3_4, dvbs2rxx.C4_5, dvbs2rxx.C5_6]
    hide: ${ (framesize1.hide_short if str(standard) == 'STANDARD_DVBT2' else 'all')
        }
-   id: rate3
    label: Code rate
    dtype: enum
    options: [C1_4, C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6, C8_9, C9_10, C2_9_VLSNR,
        C13_45, C9_20, C90_180, C96_180, C11_20, C100_180, C104_180, C26_45, C18_30,
        C28_45, C23_36, C116_180, C20_30, C124_180, C25_36, C128_180, C13_18, C132_180,
        C22_30, C135_180, C140_180, C7_9, C154_180]
    option_labels: [1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 8/9, 9/10, 2/9 VL-SNR,
        13/45, 9/20, 90/180, 96/180, 11/20, 100/180, 104/180, 26/45, 18/30, 28/45,
        23/36, 116/180, 20/30, 124/180, 25/36, 128/180, 13/18, 132/180, 22/30, 135/180,
        140/180, 7/9, 154/180]
    option_attributes:
        val: [dvbs2rxx.C1_4, dvbs2rxx.C1_3, dvbs2rxx.C2_5, dvbs2rxx.C1_2, dvbs2rxx.C3_5,
            dvbs2rxx.C2_3, dvbs2rxx.C3_4, dvbs2rxx.C4_5, dvbs2rxx.C5_6, dvbs2rxx.C8_9,
            dvbs2rxx.C9_10, dvbs2rxx.C2_9_VLSNR, dvbs2rxx.C13_45, dvbs2rxx.C9_20, dvbs2rxx.C90_180,
            dvbs2rxx.C96_180, dvbs2rxx.C11_20, dvbs2rxx.C100_180, dvbs2rxx.C104_180, dvbs2rxx.C26_45,
            dvbs2rxx.C18_30, dvbs2rxx.C28_45, dvbs2rxx.C23_36, dvbs2rxx.C116_180, dvbs2rxx.C20_30,
            dvbs2rxx.C124_180, dvbs2rxx.C25_36, dvbs2rxx.C128_180, dvbs2rxx.C13_18, dvbs2rxx.C132_180,
            dvbs2rxx.C22_30, dvbs2rxx.C135_180, dvbs2rxx.C140_180, dvbs2rxx.C7_9, dvbs2rxx.C154_180]
    hide: ${ (framesize2.hide_normal if str(standard) == 'STANDARD_DVBS2' else 'all')
        }
-   id: rate4
    label: Code rate
    dtype: enum
    options: [C1_5_MEDIUM, C11_45_MEDIUM, C1_3_MEDIUM]
    option_labels: [1/5, 11/45, 1/3]
    option_attributes:
        val: [dvbs2rxx.C1_5_MEDIUM, dvbs2rxx.C11_45_MEDIUM, dvbs2rxx.C1_3_MEDIUM]
    hide: ${ (framesize2.hide_medium if str(standard) == 'STANDARD_DVBS2' else 'all')
        }
-   id: rate5
    label: Code rate
    dtype: enum
    options: [C1_4, C1_3, C2_5, C1_2, C3_5, C2_3, C3_4, C4_5, C5_6, C8_9, C11_45,
        C4_15, C14_45, C7_15, C8_15, C26_45, C32_45, C1_5_VLSNR_SF2, C11_45_VLSNR_SF2,
        C1_5_VLSNR, C4_15_VLSNR, C1_3_VLSNR]
    option_labels: [1/4, 1/3, 2/5, 1/2, 3/5, 2/3, 3/4, 4/5, 5/6, 8/9, 11/45, 4/15,
        14/45, 7/15, 8/15, 26/45, 32/45, 1/5 VL-SNR SF2, 11/45 VL-SNR SF2, 1/5 VL-SNR,
        4/15 VL-SNR, 1/3 VL-SNR]
    option_attributes:
        val: [dvbs2rxx.C1_4, dvbs2rxx.C1_3, dvbs2rxx.C2_5, dvbs2rxx.C1_2, dvbs2rxx.C3_5,
            dvbs2rxx.C2_3, dvbs2rxx.C3_4, dvbs2rxx.C4_5, dvbs2rxx.C5_6, dvbs2rxx.C8_9,
            dvbs2rxx.C11_45, dvbs2rxx.C4_15, dvbs2rxx.C14_45, dvbs2rxx.C7_15, dvbs2rxx.C8_15,
            dvbs2rxx.C26_45, dvbs2rxx.C32_45, dvbs2rxx.C1_5_VLSNR_SF2, dvbs2rxx.C11_45_VLSNR_SF2,
            dvbs2rxx.C1_5_VLSNR, dvbs2rxx.C4_15_VLSNR, dvbs2rxx.C1_3_VLSNR]
    hide: ${ (framesize2.hide_short if str(standard) == 'STANDARD_DVBS2' else 'all')
        }
-   id: constellation1
    label: Constellation
    dtype: enum
    options: [MOD_QPSK, MOD_16QAM, MOD_64QAM, MOD_256QAM]
    option_labels: [QPSK, 16QAM, 64QAM, 256QAM]
    option_attributes:
        val: [dvbs2rxx.MOD_QPSK, dvbs2rxx.MOD_16QAM, dvbs2rxx.MOD_64QAM, dvbs2rxx.MOD_256QAM]
    hide: ${ standard.hide_dvbt2 }
-   id: constellation2
    label: Constellation
    dtype: enum
    options: [MOD_QPSK, MOD_8PSK]
    option_labels: [QPSK, 8PSK]
    option_attributes:
        val: [dvbs2rxx.MOD_QPSK, dvbs2rxx.MOD_8PSK]
    hide: ${ standard.hide_dvbs2 }
-   id: outputmode
    label: Output mode
    dtype: enum
    options: [OM_CODEWORD, OM_MESSAGE]
    option_labels: [Codeword, Message]
    option_attributes:
        val: [dvbs2rxx.OM_CODEWORD, dvbs2rxx.OM_MESSAGE]
-   id: infomode
    label: Show Corrected SNR
    dtype: enum
    options: [INFO_OFF, INFO_ON]
    option_labels: ['Off', 'On']
    option_attributes:
        val: [dvbs2rxx.INFO_OFF, dvbs2rxx.INFO_ON]

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: byte

templates:
    imports: import dvbs2rxx
    make: "dvbs2rxx.ldpc_decoder_cb(${standard.val}, \n% if str(standard) == 'STANDARD_DVBT2':\n\
        ${framesize1.val}, \n% else:\n${framesize2.val}, \n% endif\n% if str(standard)\
        \ == 'STANDARD_DVBT2':\n% if str(framesize1) == 'FECFRAME_NORMAL':\n${rate1.val},\
        \ \n% else:\n${rate2.val}, \n% endif\n% else:\n% if str(framesize2) == 'FECFRAME_NORMAL':\n\
        ${rate3.val}, \n% elif str(framesize2) == 'FECFRAME_MEDIUM':\n${rate4.val},\
        \ \n% else:\n${rate5.val}, \n% endif\n% endif\n% if str(standard) == 'STANDARD_DVBT2':\n\
        ${constellation1.val}, \n% else:\n${constellation2.val}, \n% endif\n${outputmode.val},\
        \ ${infomode.val})"

file_format: 1
